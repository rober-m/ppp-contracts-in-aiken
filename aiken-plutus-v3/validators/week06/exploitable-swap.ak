use aiken/collection/list
use aiken_plutus_v3/util.{PKH}
use cardano/address.{from_verification_key}
use cardano/assets.{lovelace_of, merge, zero}
use cardano/transaction.{Transaction}

pub type DatumSwap {
  beneficiary: PKH,
  price: Int,
}

validator exploitable_swap {
  spend(datum: Option<DatumSwap>, _r, _utxo, tx: Transaction) {
    // Only allow spending if datum is present
    expect Some(d) = datum
    // Get Tx outputs
    let Transaction { outputs, .. } = tx
    // Get only beneficiary's outputs
    let user_outputs =
      list.filter(
        outputs,
        fn(o) { o.address == from_verification_key(d.beneficiary) },
      )
    // Caluculate total value sent to beneficiary
    let value_paid_to_benef =
      list.foldl(user_outputs, zero, fn(n, acc) { merge(n.value, acc) })
    // Validator check
    (lovelace_of(value_paid_to_benef) >= d.price)?
  }

  else(_) {
    fail
  }
}
